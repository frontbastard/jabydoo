services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py create_superuser &&
             python manage.py collectstatic --noinput &&
             gunicorn site_service.wsgi:application --bind 0.0.0.0:8000;"
    environment:
      - DJANGO_SETTINGS_MODULE=site_service.settings
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  nginx:
    build: ./nginx
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt/live/canadatechguys.com:/etc/letsencrypt/live/canadatechguys.com:ro
      - /etc/letsencrypt/archive/canadatechguys.com:/etc/letsencrypt/archive/canadatechguys.com:ro
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web

#  certbot:
#    image: certbot/certbot
#    volumes:
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot

volumes:
  postgres_data:
  static_volume:
  media_volume:
